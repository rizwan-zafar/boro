{"version":3,"file":"rtl-css-js.core.umd.js","sources":["../src/internal/utils.js","../src/internal/property-value-converters.js","../src/internal/convert.js"],"sourcesContent":["/**\n * Takes an array of [keyValue1, keyValue2] pairs and creates an object of {keyValue1: keyValue2, keyValue2: keyValue1}\n * @param {Array} array the array of pairs\n * @return {Object} the {key, value} pair object\n */\nfunction arrayToObject(array) {\n  return array.reduce((obj, [prop1, prop2]) => {\n    obj[prop1] = prop2\n    obj[prop2] = prop1\n    return obj\n  }, {})\n}\n\nfunction containsCssVar(val) {\n  return typeof val === 'string' && val.match(/var\\(.*\\)/g)\n}\n\nfunction isBoolean(val) {\n  return typeof val === 'boolean'\n}\n\nfunction isFunction(val) {\n  return typeof val === 'function'\n}\n\nfunction isNumber(val) {\n  return typeof val === 'number'\n}\n\nfunction isNullOrUndefined(val) {\n  return val === null || typeof val === 'undefined'\n}\n\nfunction isObject(val) {\n  return val && typeof val === 'object'\n}\n\nfunction isString(val) {\n  return typeof val === 'string'\n}\n\nfunction includes(inclusive, inclusee) {\n  return inclusive.indexOf(inclusee) !== -1\n}\n\n/**\n * Flip the sign of a CSS value, possibly with a unit.\n *\n * We can't just negate the value with unary minus due to the units.\n *\n * @private\n * @param {String} value - the original value (for example 77%)\n * @return {String} the result (for example -77%)\n */\nfunction flipSign(value) {\n  if (parseFloat(value) === 0) {\n    // Don't mangle zeroes\n    return value\n  }\n\n  if (value[0] === '-') {\n    return value.slice(1)\n  }\n\n  return `-${value}`\n}\n\nfunction flipTransformSign(match, prefix, offset, suffix) {\n  return prefix + flipSign(offset) + suffix\n}\n\n/**\n * Takes a percentage for background position and inverts it.\n * This was copied and modified from CSSJanus:\n * https://github.com/cssjanus/cssjanus/blob/4245f834365f6cfb0239191a151432fb85abab23/src/cssjanus.js#L152-L175\n * @param {String} value - the original value (for example 77%)\n * @return {String} the result (for example 23%)\n */\nfunction calculateNewBackgroundPosition(value) {\n  const idx = value.indexOf('.')\n  if (idx === -1) {\n    value = `${100 - parseFloat(value)}%`\n  } else {\n    // Two off, one for the \"%\" at the end, one for the dot itself\n    const len = value.length - idx - 2\n    value = 100 - parseFloat(value)\n    value = `${value.toFixed(len)}%`\n  }\n  return value\n}\n\n/**\n * This takes a list of CSS values and converts it to an array\n * @param {String} value - something like `1px`, `1px 2em`, or `3pt rgb(150, 230, 550) 40px calc(100% - 5px)`\n * @return {Array} the split values (for example: `['3pt', 'rgb(150, 230, 550)', '40px', 'calc(100% - 5px)']`)\n */\nfunction getValuesAsList(value) {\n  return (\n    value\n      .replace(/ +/g, ' ') // remove all extraneous spaces\n      .split(' ')\n      .map(i => i.trim()) // get rid of extra space before/after each item\n      .filter(Boolean) // get rid of empty strings\n      // join items which are within parenthese\n      // luckily `calc (100% - 5px)` is invalid syntax and it must be `calc(100% - 5px)`, otherwise this would be even more complex\n      .reduce(\n        ({list, state}, item) => {\n          const openParansCount = (item.match(/\\(/g) || []).length\n          const closedParansCount = (item.match(/\\)/g) || []).length\n          if (state.parensDepth > 0) {\n            list[list.length - 1] = `${list[list.length - 1]} ${item}`\n          } else {\n            list.push(item)\n          }\n          state.parensDepth += openParansCount - closedParansCount\n          return {list, state}\n        },\n        {list: [], state: {parensDepth: 0}},\n      ).list\n  )\n}\n\n/**\n * This is intended for properties that are `top right bottom left` and will switch them to `top left bottom right`\n * @param {String} value - `1px 2px 3px 4px` for example, but also handles cases where there are too few/too many and\n * simply returns the value in those cases (which is the correct behavior)\n * @return {String} the result - `1px 4px 3px 2px` for example.\n */\nfunction handleQuartetValues(value) {\n  const splitValues = getValuesAsList(value)\n  if (splitValues.length <= 3 || splitValues.length > 4) {\n    return value\n  }\n  const [top, right, bottom, left] = splitValues\n  return [top, left, bottom, right].join(' ')\n}\n\n/**\n *\n * @param {String|Number|Object} value css property value to test\n * @returns If the css property value can(should?) have an RTL equivalent\n */\nfunction canConvertValue(value) {\n  return (\n    !isBoolean(value) && !isNullOrUndefined(value) && !containsCssVar(value)\n  )\n}\n\n/**\n * Splits a shadow style into its separate shadows using the comma delimiter, but creating an exception\n * for comma separated values in parentheses often used for rgba colours.\n * @param {String} value\n * @returns {Array} array of all box shadow values in the string\n */\nfunction splitShadow(value) {\n  const shadows = []\n  let start = 0\n  let end = 0\n  let rgba = false\n  while (end < value.length) {\n    if (!rgba && value[end] === ',') {\n      shadows.push(value.substring(start, end).trim())\n      end++\n      start = end\n    } else if (value[end] === `(`) {\n      rgba = true\n      end++\n    } else if (value[end] === ')') {\n      rgba = false\n      end++\n    } else {\n      end++\n    }\n  }\n\n  // push the last shadow value if there is one\n  // istanbul ignore next\n  if (start != end) {\n    shadows.push(value.substring(start, end + 1))\n  }\n\n  return shadows\n}\n\nexport {\n  arrayToObject,\n  calculateNewBackgroundPosition,\n  canConvertValue,\n  flipTransformSign as calculateNewTranslate,\n  flipTransformSign,\n  flipSign,\n  handleQuartetValues,\n  includes,\n  isBoolean,\n  containsCssVar,\n  isFunction,\n  isNumber,\n  isNullOrUndefined,\n  isObject,\n  isString,\n  getValuesAsList,\n  splitShadow,\n}\n","import {\n  includes,\n  isNumber,\n  calculateNewBackgroundPosition,\n  flipTransformSign,\n  handleQuartetValues,\n  getValuesAsList,\n  splitShadow,\n} from './utils'\n\n// some values require a little fudging, that fudging goes here.\nconst propertyValueConverters = {\n  padding({value}) {\n    if (isNumber(value)) {\n      return value\n    }\n    return handleQuartetValues(value)\n  },\n  textShadow({value}) {\n    const flippedShadows = splitShadow(value).map(shadow => {\n      // intentionally leaving off the `g` flag here because we only want to change the first number (which is the offset-x)\n      return shadow.replace(/(-*)([.|\\d]+)/, (match, negative, number) => {\n        if (number === '0') {\n          return match\n        }\n        const doubleNegative = negative === '' ? '-' : ''\n        return `${doubleNegative}${number}`\n      })\n    })\n\n    return flippedShadows.join(',')\n  },\n  borderColor({value}) {\n    return handleQuartetValues(value)\n  },\n  borderRadius({value}) {\n    if (isNumber(value)) {\n      return value\n    }\n    if (includes(value, '/')) {\n      const [radius1, radius2] = value.split('/')\n      const convertedRadius1 = propertyValueConverters.borderRadius({\n        value: radius1.trim(),\n      })\n      const convertedRadius2 = propertyValueConverters.borderRadius({\n        value: radius2.trim(),\n      })\n      return `${convertedRadius1} / ${convertedRadius2}`\n    }\n    const splitValues = getValuesAsList(value)\n    switch (splitValues.length) {\n      case 2: {\n        return splitValues.reverse().join(' ')\n      }\n      case 4: {\n        const [topLeft, topRight, bottomRight, bottomLeft] = splitValues\n        return [topRight, topLeft, bottomLeft, bottomRight].join(' ')\n      }\n      default: {\n        return value\n      }\n    }\n  },\n  background({\n    value,\n    valuesToConvert,\n    isRtl,\n    bgImgDirectionRegex,\n    bgPosDirectionRegex,\n  }) {\n    if (isNumber(value)) {\n      return value\n    }\n\n    // Yeah, this is in need of a refactor 🙃...\n    // but this property is a tough cookie 🍪\n    // get the backgroundPosition out of the string by removing everything that couldn't be the backgroundPosition value\n    const backgroundPositionValue = value\n      .replace(\n        /(url\\(.*?\\))|(rgba?\\(.*?\\))|(hsl\\(.*?\\))|(#[a-fA-F0-9]+)|((^| )(\\D)+( |$))/g,\n        '',\n      )\n      .trim()\n    // replace that backgroundPosition value with the converted version\n    value = value.replace(\n      backgroundPositionValue,\n      propertyValueConverters.backgroundPosition({\n        value: backgroundPositionValue,\n        valuesToConvert,\n        isRtl,\n        bgPosDirectionRegex,\n      }),\n    )\n    // do the backgroundImage value replacing on the whole value (because why not?)\n    return propertyValueConverters.backgroundImage({\n      value,\n      valuesToConvert,\n      bgImgDirectionRegex,\n    })\n  },\n  backgroundImage({value, valuesToConvert, bgImgDirectionRegex}) {\n    if (!includes(value, 'url(') && !includes(value, 'linear-gradient(')) {\n      return value\n    }\n    return value.replace(bgImgDirectionRegex, (match, g1, group2) => {\n      return match.replace(group2, valuesToConvert[group2])\n    })\n  },\n  backgroundPosition({value, valuesToConvert, isRtl, bgPosDirectionRegex}) {\n    return (\n      value\n        // intentionally only grabbing the first instance of this because that represents `left`\n        .replace(isRtl ? /^((-|\\d|\\.)+%)/ : null, (match, group) =>\n          calculateNewBackgroundPosition(group),\n        )\n        .replace(bgPosDirectionRegex, match => valuesToConvert[match])\n    )\n  },\n  backgroundPositionX({value, valuesToConvert, isRtl, bgPosDirectionRegex}) {\n    if (isNumber(value)) {\n      return value\n    }\n    return propertyValueConverters.backgroundPosition({\n      value,\n      valuesToConvert,\n      isRtl,\n      bgPosDirectionRegex,\n    })\n  },\n  transition({value, propertiesToConvert}) {\n    return value\n      .split(/,\\s*/g)\n      .map(transition => {\n        const values = transition.split(' ')\n\n        // Property is always defined first\n        values[0] = propertiesToConvert[values[0]] || values[0]\n\n        return values.join(' ')\n      })\n      .join(', ')\n  },\n  transitionProperty({value, propertiesToConvert}) {\n    return value\n      .split(/,\\s*/g)\n      .map(prop => propertiesToConvert[prop] || prop)\n      .join(', ')\n  },\n  transform({value}) {\n    // This was copied and modified from CSSJanus:\n    // https://github.com/cssjanus/cssjanus/blob/4a40f001b1ba35567112d8b8e1d9d95eda4234c3/src/cssjanus.js#L152-L153\n    const nonAsciiPattern = '[^\\\\u0020-\\\\u007e]'\n    const unicodePattern = '(?:(?:\\\\[0-9a-f]{1,6})(?:\\\\r\\\\n|\\\\s)?)'\n    const numPattern = '(?:[0-9]*\\\\.[0-9]+|[0-9]+)'\n    const unitPattern = '(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)'\n    const escapePattern = `(?:${unicodePattern}|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-f])`\n    const nmstartPattern = `(?:[_a-z]|${nonAsciiPattern}|${escapePattern})`\n    const nmcharPattern = `(?:[_a-z0-9-]|${nonAsciiPattern}|${escapePattern})`\n    const identPattern = `-?${nmstartPattern}${nmcharPattern}*`\n    const quantPattern = `${numPattern}(?:\\\\s*${unitPattern}|${identPattern})?`\n    const signedQuantPattern = `((?:-?${quantPattern})|(?:inherit|auto))`\n    const translateXRegExp = new RegExp(\n      `(translateX\\\\s*\\\\(\\\\s*)${signedQuantPattern}(\\\\s*\\\\))`,\n      'gi',\n    )\n    const translateRegExp = new RegExp(\n      `(translate\\\\s*\\\\(\\\\s*)${signedQuantPattern}((?:\\\\s*,\\\\s*${signedQuantPattern}){0,1}\\\\s*\\\\))`,\n      'gi',\n    )\n    const translate3dRegExp = new RegExp(\n      `(translate3d\\\\s*\\\\(\\\\s*)${signedQuantPattern}((?:\\\\s*,\\\\s*${signedQuantPattern}){0,2}\\\\s*\\\\))`,\n      'gi',\n    )\n    const rotateRegExp = new RegExp(\n      `(rotate[ZY]?\\\\s*\\\\(\\\\s*)${signedQuantPattern}(\\\\s*\\\\))`,\n      'gi',\n    )\n    return value\n      .replace(translateXRegExp, flipTransformSign)\n      .replace(translateRegExp, flipTransformSign)\n      .replace(translate3dRegExp, flipTransformSign)\n      .replace(rotateRegExp, flipTransformSign)\n  },\n}\n\npropertyValueConverters.objectPosition =\n  propertyValueConverters.backgroundPosition\npropertyValueConverters.margin = propertyValueConverters.padding\npropertyValueConverters.borderWidth = propertyValueConverters.padding\npropertyValueConverters.boxShadow = propertyValueConverters.textShadow\npropertyValueConverters.webkitBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.mozBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.WebkitBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.MozBoxShadow = propertyValueConverters.boxShadow\npropertyValueConverters.borderStyle = propertyValueConverters.borderColor\npropertyValueConverters.webkitTransform = propertyValueConverters.transform\npropertyValueConverters.mozTransform = propertyValueConverters.transform\npropertyValueConverters.WebkitTransform = propertyValueConverters.transform\npropertyValueConverters.MozTransform = propertyValueConverters.transform\npropertyValueConverters.transformOrigin =\n  propertyValueConverters.backgroundPosition\npropertyValueConverters.webkitTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.mozTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.WebkitTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.MozTransformOrigin =\n  propertyValueConverters.transformOrigin\npropertyValueConverters.webkitTransition = propertyValueConverters.transition\npropertyValueConverters.mozTransition = propertyValueConverters.transition\npropertyValueConverters.WebkitTransition = propertyValueConverters.transition\npropertyValueConverters.MozTransition = propertyValueConverters.transition\npropertyValueConverters.webkitTransitionProperty =\n  propertyValueConverters.transitionProperty\npropertyValueConverters.mozTransitionProperty =\n  propertyValueConverters.transitionProperty\npropertyValueConverters.WebkitTransitionProperty =\n  propertyValueConverters.transitionProperty\npropertyValueConverters.MozTransitionProperty =\n  propertyValueConverters.transitionProperty\n\n// kebab-case versions\n\npropertyValueConverters['text-shadow'] = propertyValueConverters.textShadow\npropertyValueConverters['border-color'] = propertyValueConverters.borderColor\npropertyValueConverters['border-radius'] = propertyValueConverters.borderRadius\npropertyValueConverters['background-image'] =\n  propertyValueConverters.backgroundImage\npropertyValueConverters['background-position'] =\n  propertyValueConverters.backgroundPosition\npropertyValueConverters['background-position-x'] =\n  propertyValueConverters.backgroundPositionX\npropertyValueConverters['object-position'] =\n  propertyValueConverters.objectPosition\npropertyValueConverters['border-width'] = propertyValueConverters.padding\npropertyValueConverters['box-shadow'] = propertyValueConverters.textShadow\npropertyValueConverters['-webkit-box-shadow'] =\n  propertyValueConverters.textShadow\npropertyValueConverters['-moz-box-shadow'] = propertyValueConverters.textShadow\npropertyValueConverters['border-style'] = propertyValueConverters.borderColor\npropertyValueConverters['-webkit-transform'] = propertyValueConverters.transform\npropertyValueConverters['-moz-transform'] = propertyValueConverters.transform\npropertyValueConverters['transform-origin'] =\n  propertyValueConverters.transformOrigin\npropertyValueConverters['-webkit-transform-origin'] =\n  propertyValueConverters.transformOrigin\npropertyValueConverters['-moz-transform-origin'] =\n  propertyValueConverters.transformOrigin\npropertyValueConverters['-webkit-transition'] =\n  propertyValueConverters.transition\npropertyValueConverters['-moz-transition'] = propertyValueConverters.transition\npropertyValueConverters['transition-property'] =\n  propertyValueConverters.transitionProperty\npropertyValueConverters['-webkit-transition-property'] =\n  propertyValueConverters.transitionProperty\npropertyValueConverters['-moz-transition-property'] =\n  propertyValueConverters.transitionProperty\n\nexport default propertyValueConverters\n","import {\n  includes,\n  arrayToObject,\n  isFunction,\n  isNumber,\n  isObject,\n  isString,\n  canConvertValue,\n} from './utils'\nimport propertyValueConverters from './property-value-converters'\n\n// this will be an object of properties that map to their corresponding rtl property (their doppelganger)\nexport const propertiesToConvert = arrayToObject([\n  ['paddingLeft', 'paddingRight'],\n  ['marginLeft', 'marginRight'],\n  ['left', 'right'],\n  ['borderLeft', 'borderRight'],\n  ['borderLeftColor', 'borderRightColor'],\n  ['borderLeftStyle', 'borderRightStyle'],\n  ['borderLeftWidth', 'borderRightWidth'],\n  ['borderTopLeftRadius', 'borderTopRightRadius'],\n  ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n  // kebab-case versions\n  ['padding-left', 'padding-right'],\n  ['margin-left', 'margin-right'],\n  ['border-left', 'border-right'],\n  ['border-left-color', 'border-right-color'],\n  ['border-left-style', 'border-right-style'],\n  ['border-left-width', 'border-right-width'],\n  ['border-top-left-radius', 'border-top-right-radius'],\n  ['border-bottom-left-radius', 'border-bottom-right-radius'],\n])\n\nexport const propsToIgnore = ['content']\n\n// this is the same as the propertiesToConvert except for values\nexport const valuesToConvert = arrayToObject([\n  ['ltr', 'rtl'],\n  ['left', 'right'],\n  ['w-resize', 'e-resize'],\n  ['sw-resize', 'se-resize'],\n  ['nw-resize', 'ne-resize'],\n])\n\n// Sorry for the regex 😞, but basically thisis used to replace _every_ instance of\n// `ltr`, `rtl`, `right`, and `left` in `backgroundimage` with the corresponding opposite.\n// A situation we're accepting here:\n// url('/left/right/rtl/ltr.png') will be changed to url('/right/left/ltr/rtl.png')\n// Definite trade-offs here, but I think it's a good call.\nconst bgImgDirectionRegex = new RegExp(\n  '(^|\\\\W|_)((ltr)|(rtl)|(left)|(right))(\\\\W|_|$)',\n  'g',\n)\nconst bgPosDirectionRegex = new RegExp('(left)|(right)')\n\n/**\n * converts properties and values in the CSS in JS object to their corresponding RTL values\n * @param {Object} object the CSS in JS object\n * @return {Object} the RTL converted object\n */\nexport function convert(object) {\n  return Object.keys(object).reduce(\n    (newObj, originalKey) => {\n      let originalValue = object[originalKey]\n      if (isString(originalValue)) {\n        // you're welcome to later code 😺\n        originalValue = originalValue.trim()\n      }\n\n      // Some properties should never be transformed\n      if (includes(propsToIgnore, originalKey)) {\n        newObj[originalKey] = originalValue\n        return newObj\n      }\n\n      const {key, value} = convertProperty(originalKey, originalValue)\n      newObj[key] = value\n      return newObj\n    },\n    Array.isArray(object) ? [] : {},\n  )\n}\n\n/**\n * Converts a property and its value to the corresponding RTL key and value\n * @param {String} originalKey the original property key\n * @param {Number|String|Object} originalValue the original css property value\n * @return {Object} the new {key, value} pair\n */\nexport function convertProperty(originalKey, originalValue) {\n  const isNoFlip = /\\/\\*\\s?@noflip\\s?\\*\\//.test(originalValue)\n  const key = isNoFlip ? originalKey : getPropertyDoppelganger(originalKey)\n  const value = isNoFlip\n    ? originalValue\n    : getValueDoppelganger(key, originalValue)\n  return {key, value}\n}\n\n/**\n * This gets the RTL version of the given property if it has a corresponding RTL property\n * @param {String} property the name of the property\n * @return {String} the name of the RTL property\n */\nexport function getPropertyDoppelganger(property) {\n  return propertiesToConvert[property] || property\n}\n\n/**\n * This converts the given value to the RTL version of that value based on the key\n * @param {String} key this is the key (note: this should be the RTL version of the originalKey)\n * @param {String|Number|Object} originalValue the original css property value. If it's an object, then we'll convert that as well\n * @return {String|Number|Object} the converted value\n */\nexport function getValueDoppelganger(key, originalValue) {\n  if (!canConvertValue(originalValue)) {\n    return originalValue\n  }\n\n  if (isObject(originalValue)) {\n    return convert(originalValue) // recurssion 🌀\n  }\n  const isNum = isNumber(originalValue)\n  const isFunc = isFunction(originalValue)\n\n  const importantlessValue =\n    isNum || isFunc\n      ? originalValue\n      : originalValue.replace(/ !important.*?$/, '')\n  const isImportant =\n    !isNum && importantlessValue.length !== originalValue.length\n  const valueConverter = propertyValueConverters[key]\n  let newValue\n  if (valueConverter) {\n    newValue = valueConverter({\n      value: importantlessValue,\n      valuesToConvert,\n      propertiesToConvert,\n      isRtl: true,\n      bgImgDirectionRegex,\n      bgPosDirectionRegex,\n    })\n  } else {\n    newValue = valuesToConvert[importantlessValue] || importantlessValue\n  }\n  if (isImportant) {\n    return `${newValue} !important`\n  }\n  return newValue\n}\n"],"names":["arrayToObject","array","reduce","obj","prop1","prop2","containsCssVar","val","match","isBoolean","isFunction","isNumber","isNullOrUndefined","isObject","isString","includes","inclusive","inclusee","indexOf","flipSign","value","parseFloat","slice","flipTransformSign","prefix","offset","suffix","calculateNewBackgroundPosition","idx","len","length","toFixed","getValuesAsList","replace","split","map","i","trim","filter","Boolean","item","list","state","openParansCount","closedParansCount","parensDepth","push","handleQuartetValues","splitValues","top","right","bottom","left","join","canConvertValue","splitShadow","shadows","start","end","rgba","substring","propertyValueConverters","padding","textShadow","flippedShadows","shadow","negative","number","doubleNegative","borderColor","borderRadius","radius1","radius2","convertedRadius1","convertedRadius2","reverse","topLeft","topRight","bottomRight","bottomLeft","background","valuesToConvert","isRtl","bgImgDirectionRegex","bgPosDirectionRegex","backgroundPositionValue","backgroundPosition","backgroundImage","g1","group2","group","backgroundPositionX","transition","propertiesToConvert","values","transitionProperty","prop","transform","nonAsciiPattern","escapePattern","signedQuantPattern","translateXRegExp","RegExp","translateRegExp","translate3dRegExp","rotateRegExp","objectPosition","margin","borderWidth","boxShadow","webkitBoxShadow","mozBoxShadow","WebkitBoxShadow","MozBoxShadow","borderStyle","webkitTransform","mozTransform","WebkitTransform","MozTransform","transformOrigin","webkitTransformOrigin","mozTransformOrigin","WebkitTransformOrigin","MozTransformOrigin","webkitTransition","mozTransition","WebkitTransition","MozTransition","webkitTransitionProperty","mozTransitionProperty","WebkitTransitionProperty","MozTransitionProperty","propsToIgnore","convert","object","Object","keys","newObj","originalKey","originalValue","convertProperty","key","Array","isArray","isNoFlip","test","getPropertyDoppelganger","getValueDoppelganger","property","isNum","isFunc","importantlessValue","isImportant","valueConverter","newValue"],"mappings":"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"}